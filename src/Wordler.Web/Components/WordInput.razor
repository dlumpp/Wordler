@using Wordler.Core

<span class="word-input @GetStatusClass()">
    @for (int i = 0; i < Wordler.Core.Mixer.WordSize; i++)
    {
        <LetterInput Status="Status"
                 Index="i"
                 LetterChanged="@LetterInputChanged">
        </LetterInput>
    }
</span>

@code {

    [Parameter, EditorRequired]
    public LetterStatus Status { get; set; }

    [Parameter]
    public EventCallback<LetterSpace?[]> WordChanged { get; set; }

    LetterSpace?[] Word { get; set; } = default!;

    protected override void OnInitialized()
    {
        Word = new LetterSpace[Wordler.Core.Mixer.WordSize];
    }

    async Task LetterInputChanged(LetterSpace letterSpace)
    {
        int index = letterSpace.At ?? letterSpace.NotAt.Single();
        Word[index] = letterSpace;
        await WordChanged.InvokeAsync(Word);
    }

    string GetStatusClass() => Status.ToString().ToLower();
}
